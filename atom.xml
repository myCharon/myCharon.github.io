<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>charonxu&#39;s Blog</title>
  
  
  <link href="http://charonxu.cn/atom.xml" rel="self"/>
  
  <link href="http://charonxu.cn/"/>
  <updated>2021-02-05T14:30:02.806Z</updated>
  <id>http://charonxu.cn/</id>
  
  <author>
    <name>charonxu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux常用命令总结</title>
    <link href="http://charonxu.cn/2021/02/01/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://charonxu.cn/2021/02/01/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</id>
    <published>2021-02-01T15:15:55.000Z</published>
    <updated>2021-02-05T14:30:02.806Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、网络命令"><a href="#一、网络命令" class="headerlink" title="一、网络命令"></a>一、网络命令</h1><h2 id="检查、检测网络"><a href="#检查、检测网络" class="headerlink" title="检查、检测网络"></a>检查、检测网络</h2><p><strong>ping命令 向网络主机发送特殊数据包</strong></p><p>常用于测试网络连通性</p><pre><code>ping [参数] [ip地址]            可不加参数相关参数:  -c 指定发送次数   例如:  ping -c 10 charonxu.cn  向网站发送10次数据包使用 ctrl+C 终止程序 如果数据包丢失0% 则表示网络运行正常  默认传送数据时间间隔为1s</code></pre><a id="more"></a><p><strong>tracerouer命令 跟踪网络数据包的传输路径</strong></p><p>会显示文件通过网络从本地系统传输到指定主机过程中所有停靠点的列表</p><pre><code>traceroute [网址]</code></pre><p>在列表中会列出主机名、IP地址以及运行状态信息  包含文件从本地系统到路由器3次往返时间</p><p>对于不提供身份信息的路由器 会用星号代替</p><p><strong>netstat命令  检查网络设置及相关统计数据 （显示网络相关信息）</strong></p><pre><code>netstat [参数]相关参数: -t TCP协议   -u UDP协议   -l 监听   -r 路由  -n 显示IP地址和端口号 常用例子: netstat -tlun  查看本机监听的端口   netstat -an 查看本机所有的网络连接          netstat -rn 查看本机路由表</code></pre><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p><strong>who命令 查看当前在线用户</strong></p><pre><code>who 无参数          显示的是当前机器下在线人数</code></pre><p><strong>write命令 给其他在线用户发信息</strong></p><pre><code>write [用户名]      然后换行输入发送的信息  ctrl+C结束</code></pre><p><strong>wall命令 给所有在线用户发送广播信息</strong></p><pre><code>wall [message]是write all 的缩写</code></pre><p><strong>mail命令 查看电子邮件</strong></p><pre><code>mail [用户]        换行输入内容</code></pre><p><strong>lastlog 检查某特定用户上次登陆的时间</strong></p><pre><code>last -u [用户UID]</code></pre><h2 id="通过网络传输文件"><a href="#通过网络传输文件" class="headerlink" title="通过网络传输文件"></a>通过网络传输文件</h2><p><strong>ftp命令  采用FTP（文件传输协议）传输文件</strong></p><p>ftp是不安全的协议，因为它以明文的方式传送账户名以及密码。<br>这意味着信息未进行加密，任何人都可以看到。</p><p>因此，所有使用FTP协议进行网络文件传输都是由匿名FTP服务器处理的。</p><p>ftp命令实例:</p><pre><code>ftp fileserver      启动ftp程序，建立与FTP服务器fileserver的连接之后会提示 使用用户名何用户密码登录 某些服务器接收空密码 某些服务器需要以邮件地址的格式之后就可以进行操作</code></pre><p><strong>lftp命令 更好的ftp</strong></p><p>与传统的ftp程序功能类似但有很多额外的便利功能,包括多协议支持(HTTP)，下载失败时自动重新尝试、后台进程支持、</p><p>Tab键完成文件名输入等许多其他的功能。<br><strong>wget命令 非交互式网络下载工具</strong></p><p>该命令既可以从网站上下载内容 也可以从FTP站点下载。</p><pre><code>wget [参数] [URL]参数选项很多 支持递归下载、后台文件下载以及继续下载被下载的文件等操作 可使用man手册页查看</code></pre><h2 id="与远程主机的安全通信"><a href="#与远程主机的安全通信" class="headerlink" title="与远程主机的安全通信"></a>与远程主机的安全通信</h2><p><strong>ssh命令 安全登录远程计算机</strong></p><p>ssh协议是为了解决明文传送的问题，解决了与远程主机进行安全通信的两个基本问题：</p><p>1.该协议能验证远程主机的身分是否真实，避免中间人攻击。</p><p>2.该协议将本机与远程主机之间的通信内容全部加密。</p><p>使用ssh客户端程序与远程主机remote-sys建立连接举例：</p><pre><code>ssh remote-sys      首次尝试连接会提示不能确定远程主机真实性的消息     一旦建立连接 会提示用户输入密码输入密码后会进入到远程shell对话   使用exit命令可断开连接   恢复本地shell对话使用非本地系统的用户名也可以登录 例如远程系统上有bob账户 可使用如下命令登录：ssh bob@remote-sysssh命令除了能开启远程系统上的shell对话外，也能执行单个简单命令：ssh remote-sys free    在远程主机上执行free命令 获得可用内存使用简单命令时想把结果输出到本地系统文件中：   ssh remote-sys 'ls *' > out.txt若是想直接输出到远程系统的文件中应该将重定义符号和文件名同置于引号中： ssh remote-sys 'ls * > out.txt' </code></pre><p><strong>scp和sftp命令 安全传输文件</strong></p><p>scp命令与cp命令类似，差别在于scp命令的源或目的地路径前面多个远程主机号和冒号。</p><pre><code>使用scp命令在远程主机home目录下将out.txt文件复制到本地系统中的当前目录下操作如下：    scp remote-sys:out.txt .如果不是使用本地用户名登录，则需要加用户名前缀：    scp bob@remote-sys:out.txt .</code></pre><p>sftp是ftp的安全版本 sftp使用SSH加密隧道传输信息 而不是以明文方式传输。</p><p>sftp不需要远程主机上运行FTP服务器，仅需要SSH服务器，这意味着任何与SSH客户端连接的远程机器都可以当作FTP服务器使用。</p><hr><h1 id="二、文件搜索"><a href="#二、文件搜索" class="headerlink" title="二、文件搜索"></a>二、文件搜索</h1><h2 id="locate命令-较简单的方式查找文件"><a href="#locate命令-较简单的方式查找文件" class="headerlink" title="locate命令 较简单的方式查找文件"></a>locate命令 较简单的方式查找文件</h2><p>查找目录名以zip开头的文件</p><pre><code>locate ziplocate bin/zip      其中bin限制了路径，查找bin路径下以zip开头的文件</code></pre><p> locate 与 find 不同: find 是去硬盘找，locate 只在 /var/lib/slocate 资料库中找。</p><p>locate 的速度比 find 快，它并不是真的查找，而是查数据库，一般文件数据库在 /var/lib/slocate/slocate.db 中，所以 locate 的查找并不是实时的，而是以数据库的更新为准，一般是系统自己维护，也可以手工升级数据库 ，命令为： <code>updatedb</code></p><h2 id="find命令-较复杂的方式查找文件"><a href="#find命令-较复杂的方式查找文件" class="headerlink" title="find命令 较复杂的方式查找文件"></a>find命令 较复杂的方式查找文件</h2><h3 id="test选项"><a href="#test选项" class="headerlink" title="test选项"></a>test选项</h3><p>语法: find [搜索范围] [匹配条件]</p><p><strong>根据文件名搜索</strong></p><pre><code>find / -name file_name   / 表示范围，全局范围下  file_name表示搜索的文件名称find ~ -name 's.txt'  例子</code></pre><p><strong>根据文件大小搜索</strong></p><pre><code>find / -size +204800   查询大小大于100M的文件其中 +n表示大于n -n表示小于n n等于n  在linux系统中   一个数据块=0.5K 100MB=204800数据块是linux存储文件的单位</code></pre><p><strong>根据时间搜索</strong></p><pre><code>find / -amin n    查询当前目录下过去n分钟被读取过的文件-amin n 在过去n分钟被读取过    -cmin n 在过去n分钟被修改过-atime n 在过去n天被读取过     -ctime n 在过去n天被修改过   这四个方式使用同上 n支持+-=</code></pre><p><strong>根据文件类型搜索</strong></p><pre><code>find / -type file_type file_name其中file_type表示文件类型 常用的有:  f:一般文件  d:目录  l:软链接文件  s:socket</code></pre><p><strong>多个参数选项同用</strong></p><pre><code>find ~ -type f -name "*.JPG" -size +1M | wc -l输出文件种类为普通文件 名字以JPG为后缀 大小大于1M 的文件数量</code></pre><p><strong>find命令的逻辑操作符</strong> </p><pre><code> -a 两个条件同时满足     -o 两个条件满足任意一个即可   () 多个检测条件时 默认情况下 find从左向右 扰乱默认顺序</code></pre><h3 id="action选项"><a href="#action选项" class="headerlink" title="action选项"></a>action选项</h3><p>预定义的find命令操作：</p><pre><code>-delete      删除匹配的文件-ls          对匹配的文件进行ls操作-print       将匹配的文件的全路径以默认形式输出 是默认操作-quit        一旦匹配成功就退出</code></pre><p>参数需要加在命令的最后面    注意与test选项的前后关系</p><p><strong>用户自定义操作</strong></p><pre><code>将find查找的文件直接进行某种操作 find / -name file_name -exec ls -l &#123;&#125; \;其中 / 表示路径   file_name 查找文件名    ls -l  进行什么操作   其它东西格式固定将 -exec 换成 -ok 则在操作每个文件时都会询问是否进行操作</code></pre><h3 id="option选项"><a href="#option选项" class="headerlink" title="option选项"></a>option选项</h3><p>find命令的常用option选项：</p><pre><code>-depth    引导find程序处理目录前先处理目录内的文件，使用-delete操作时 会自动调用-maxdepth levels   当执行测试条件行为时，设置find程序陷入目录数的最大级别数-mindepth levels   最小级别数-mount    引导find程序不去遍历挂在在其他文件系统上的目录-noleaf   优化搜索 </code></pre><hr><h1 id="三、归档与备份"><a href="#三、归档与备份" class="headerlink" title="三、归档与备份"></a>三、归档与备份</h1><h2 id="文件压缩与归档"><a href="#文件压缩与归档" class="headerlink" title="文件压缩与归档"></a>文件压缩与归档</h2><p><strong>gzip命令 文件压缩与解压缩</strong></p><pre><code>gzip file_name     压缩文件file_namegunzip file_name  或者  gzip -d file_name     解压缩文件注意: 在linux系统下gzip命令只能压缩文件 不可以压缩目录   并且   压缩后文件消失 不保留原文件</code></pre><p>gzip参数选项：</p><pre><code>-c    将输出内容写到标准输出端口并且保留原有文件-d    解压缩 加上此选项 gzip命令类似于 gunzip-f    强制压缩 即便原文件的压缩版本已存在 -h    显示有用信息  --help-l    列出所有压缩文件的压缩统计-r    递归压缩-t    检验压缩文件的完整性-v    压缩时显示详细信息-number   设定压缩级别  number从1-9 速度依次变慢 压缩比变大</code></pre><p><strong>tar命令 打包压缩目录</strong>  </p><pre><code>tar 选项[-cvfz] 压缩后目录名 需要压缩的目录参数含义:  -c 打包   -v 显示详细信息   -f 指定文件名   -z 打包同时压缩 如果不使用 -z 命令 则是打包目录  需再使用 gzip 命令进行压缩tar命令解压缩语法:  tar -zxvf 压缩文件名参数含义:  -x 解包   -v 显示详细信息   -f 指定文件名   -z 解压缩</code></pre><p><strong>zip命令 压缩文件或目录</strong></p><pre><code>zip 压缩后文件名 需要压缩文件名    使用 -r 参数 可以压缩目录解压缩:    unzip 压缩后文件名zip 可以保留原文件</code></pre><p><strong>bzip2命令 压缩文件(牺牲速度换取高压缩比)</strong></p><pre><code>bzip2 file_name   添加参数 -k 可以保留原文件bunzip2   解压缩文件    添加参数 -k 保留原压缩文件</code></pre><h2 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h2><p><strong>rsync命令 远程文件、目录的同步</strong></p><p>rsync命令调用方式： <code>rsync options source destination</code></p><p>其中sourse与destination必须有一个本地文件，不允许远程系统相互复制。</p><p>常用参数options：</p><pre><code>-a     用于归档  进行递归归档并保存文件属性-v     详细输出</code></pre><h1 id="四、正则表达式"><a href="#四、正则表达式" class="headerlink" title="四、正则表达式"></a>四、正则表达式</h1><h2 id="grep命令-文本搜索"><a href="#grep命令-文本搜索" class="headerlink" title="grep命令 文本搜索"></a>grep命令 文本搜索</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、网络命令&quot;&gt;&lt;a href=&quot;#一、网络命令&quot; class=&quot;headerlink&quot; title=&quot;一、网络命令&quot;&gt;&lt;/a&gt;一、网络命令&lt;/h1&gt;&lt;h2 id=&quot;检查、检测网络&quot;&gt;&lt;a href=&quot;#检查、检测网络&quot; class=&quot;headerlink&quot; title=&quot;检查、检测网络&quot;&gt;&lt;/a&gt;检查、检测网络&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ping命令 向网络主机发送特殊数据包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常用于测试网络连通性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ping [参数] [ip地址]            可不加参数
相关参数:  -c 指定发送次数   例如:  ping -c 10 charonxu.cn  向网站发送10次数据包
使用 ctrl+C 终止程序 如果数据包丢失0% 则表示网络运行正常  默认传送数据时间间隔为1s
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="linux" scheme="http://charonxu.cn/categories/linux/"/>
    
    
  </entry>
  
</feed>
