<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>charonxu&#39;s Blog</title>
  
  
  <link href="http://charonxu.cn/atom.xml" rel="self"/>
  
  <link href="http://charonxu.cn/"/>
  <updated>2021-02-03T16:48:58.432Z</updated>
  <id>http://charonxu.cn/</id>
  
  <author>
    <name>charonxu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux常用命令总结</title>
    <link href="http://charonxu.cn/2021/02/01/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://charonxu.cn/2021/02/01/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</id>
    <published>2021-02-01T15:15:55.000Z</published>
    <updated>2021-02-03T16:48:58.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、网络命令"><a href="#一、网络命令" class="headerlink" title="一、网络命令"></a>一、网络命令</h1><h2 id="检查、检测网络"><a href="#检查、检测网络" class="headerlink" title="检查、检测网络"></a>检查、检测网络</h2><p>###ping命令 向网络主机发送特殊数据包<br>常用于测试网络连通性</p><pre><code>ping [参数] [ip地址]            可不加参数相关参数:  -c 指定发送次数   例如:  ping -c 10 charonxu.cn  向网站发送10次数据包使用 ctrl+C 终止程序 如果数据包丢失0% 则表示网络运行正常  默认传送数据时间间隔为1s</code></pre><a id="more"></a><p>###tracerouer命令 跟踪网络数据包的传输路径<br>会显示文件通过网络从本地系统传输到指定主机过程中所有停靠点的列表</p><pre><code>traceroute [网址]</code></pre><p>在列表中会列出主机名、IP地址以及运行状态信息  包含文件从本地系统到路由器3次往返时间</p><p>对于不提供身份信息的路由器 会用星号代替</p><p>###netstat命令  检查网络设置及相关统计数据 （显示网络相关信息）</p><pre><code>netstat [参数]相关参数: -t TCP协议   -u UDP协议   -l 监听   -r 路由  -n 显示IP地址和端口号 常用例子: netstat -tlun  查看本机监听的端口   netstat -an 查看本机所有的网络连接         netstat -rn 查看本机路由表</code></pre><p>##发送消息<br>###who命令 查看当前在线用户</p><pre><code>who 无参数          显示的是当前机器下在线人数</code></pre><p>###write命令 给其他在线用户发信息</p><pre><code>write [用户名]      然后换行输入发送的信息  ctrl+C结束</code></pre><p>###wall命令 给所有在线用户发送广播信息</p><pre><code>wall [message]是write all 的缩写</code></pre><p>###mail命令 查看电子邮件</p><pre><code>mail [用户]        换行输入内容</code></pre><p>###lastlog 检查某特定用户上次登陆的时间</p><pre><code>last -u [用户UID]</code></pre><p>##通过网络传输文件<br>###ftp命令  采用FTP（文件传输协议）传输文件<br>ftp是不安全的协议，因为它以明文的方式传送账户名以及密码。<br>这意味着信息未进行加密，任何人都可以看到。</p><p>因此，所有使用FTP协议进行网络文件传输都是由匿名FTP服务器处理的。</p><p>ftp命令实例:</p><pre><code>ftp fileserver      启动ftp程序，建立与FTP服务器fileserver的连接之后会提示 使用用户名何用户密码登录 某些服务器接收空密码 某些服务器需要以邮件地址的格式之后就可以进行操作</code></pre><p>###lftp命令 更好的ftp<br>与传统的ftp程序功能类似但有很多额外的便利功能,包括多协议支持(HTTP)，下载失败时自动重新尝试、后台进程支持、</p><p>Tab键完成文件名输入等许多其他的功能。<br>###wget命令 非交互式网络下载工具<br>该命令既可以从网站上下载内容 也可以从FTP站点下载。</p><pre><code>wget [参数] [URL]参数选项很多 支持递归下载、后台文件下载以及继续下载被下载的文件等操作 可使用man手册页查看</code></pre><p>##与远程主机的安全通信<br>###ssh命令 安全登录远程计算机<br>ssh协议是为了解决明文传送的问题，解决了与远程主机进行安全通信的两个基本问题：</p><p>1.该协议能验证远程主机的身分是否真实，避免中间人攻击。</p><p>2.该协议将本机与远程主机之间的通信内容全部加密。</p><p>使用ssh客户端程序与远程主机remote-sys建立连接举例：</p><pre><code>ssh remote-sys      首次尝试连接会提示不能确定远程主机真实性的消息     一旦建立连接 会提示用户输入密码输入密码后会进入到远程shell对话   使用exit命令可断开连接   恢复本地shell对话使用非本地系统的用户名也可以登录 例如远程系统上有bob账户 可使用如下命令登录：ssh bob@remote-sysssh命令除了能开启远程系统上的shell对话外，也能执行单个简单命令：ssh remote-sys free    在远程主机上执行free命令 获得可用内存使用简单命令时想把结果输出到本地系统文件中：   ssh remote-sys 'ls *' > out.txt若是想直接输出到远程系统的文件中应该将重定义符号和文件名同置于引号中： ssh remote-sys 'ls * > out.txt' </code></pre><p>###scp和sftp命令 安全传输文件<br>scp命令与cp命令类似，差别在于scp命令的源或目的地路径前面多个远程主机号和冒号。</p><pre><code>使用scp命令在远程主机home目录下将out.txt文件复制到本地系统中的当前目录下操作如下：    scp remote-sys:out.txt .如果不是使用本地用户名登录，则需要加用户名前缀：    scp bob@remote-sys:out.txt .</code></pre><p>sftp是ftp的安全版本 sftp使用SSH加密隧道传输信息 而不是以明文方式传输。</p><p>sftp不需要远程主机上运行FTP服务器，仅需要SSH服务器，这意味着任何与SSH客户端连接的远程机器都可以当作FTP服务器使用。</p><hr><p>#二、文件搜索</p><h2 id="使用find命令进行文件"><a href="#使用find命令进行文件" class="headerlink" title="使用find命令进行文件"></a>使用find命令进行文件</h2><p>语法: find [搜索范围] [匹配条件]</p><p><strong>根据文件名搜索</strong></p><pre><code>find / -name file_name   / 表示范围，全局范围下  file_name表示搜索的文件名称</code></pre><p><strong>根据文件大小搜索</strong></p><pre><code>find / -size +204800   查询大小大于100M的文件其中 +n表示大于n -n表示小于n n等于n  在linux系统中   一个数据块=0.5K 100MB=204800数据块是linux存储文件的单位</code></pre><p><strong>根据时间搜索</strong></p><pre><code>find / -amin n    查询当前目录下过去n分钟被读取过的文件-amin n 在过去n分钟被读取过    -cmin n 在过去n分钟被修改过-atime n 在过去n天被读取过     -ctime n 在过去n天被修改过   这四个方式使用同上 n支持+-=</code></pre><p><strong>根据文件类型搜索</strong></p><pre><code>find / -type file_type file_name其中file_type表示文件类型 常用的有:  f:一般文件  d:目录  l:软链接文件  s:socket</code></pre><p><strong>与其他命令同用</strong></p><pre><code>将find查找的文件直接进行某种操作 find / -name file_name -exec ls -l &#123;&#125; \;其中 / 表示路径   file_name 查找文件名    ls -l  进行什么操作   其它东西格式固定将 -exec 换成 -ok 则在操作每个文件时都会询问是否进行操作</code></pre><p>find命令支持运算符分割  例如:   -a 两个条件同时满足     -o 两个条件满足任意一个即可<br>使用find搜索会很慢  如果使用 尽量将范围缩小化</p><p>##2.文件压缩</p><p><strong>使用 gzip 命令压缩文件</strong></p><pre><code>使用方法 : gzip file_name    解压缩文件  gunzip file_name  或者  gzip -d file_name注意: 在linux系统下gzip命令只能压缩文件 不可以压缩目录   并且   压缩后文件消失 不保留原文件</code></pre><p><strong>使用 tar 命令 打包压缩目录</strong>  </p><pre><code>使用方法: tar 选项[-cvfz] 压缩后目录名 需要压缩的目录参数含义:  -c 打包   -v 显示详细信息   -f 指定文件名   -z 打包同时压缩如果不使用 -z 命令 则是打包目录  需再使用 gzip 命令进行压缩tar命令解压缩语法:  tar -zxvf 压缩文件名参数含义:  -x 解包   -v 显示详细信息   -f 指定文件名   -z 解压缩</code></pre><p><strong>使用 zip 命令压缩文件或目录</strong></p><pre><code>使用方法:  zip 压缩后文件名 需要压缩文件名    使用 -r 参数 可以压缩目录解压缩:    unzip 压缩后文件名zip 可以保留原文件</code></pre><p><strong>使用 bzip2 命令压缩文件</strong></p><pre><code>使用方法: bzip2 file_name  添加参数 -k 可以保留原文件解压缩:   bunzip2 压缩后的文件     添加参数 -k 保留原压缩文件</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、网络命令&quot;&gt;&lt;a href=&quot;#一、网络命令&quot; class=&quot;headerlink&quot; title=&quot;一、网络命令&quot;&gt;&lt;/a&gt;一、网络命令&lt;/h1&gt;&lt;h2 id=&quot;检查、检测网络&quot;&gt;&lt;a href=&quot;#检查、检测网络&quot; class=&quot;headerlink&quot; title=&quot;检查、检测网络&quot;&gt;&lt;/a&gt;检查、检测网络&lt;/h2&gt;&lt;p&gt;###ping命令 向网络主机发送特殊数据包&lt;br&gt;常用于测试网络连通性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ping [参数] [ip地址]            可不加参数
相关参数:  -c 指定发送次数   例如:  ping -c 10 charonxu.cn  向网站发送10次数据包
使用 ctrl+C 终止程序 如果数据包丢失0% 则表示网络运行正常  默认传送数据时间间隔为1s
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="linux" scheme="http://charonxu.cn/categories/linux/"/>
    
    
  </entry>
  
</feed>
